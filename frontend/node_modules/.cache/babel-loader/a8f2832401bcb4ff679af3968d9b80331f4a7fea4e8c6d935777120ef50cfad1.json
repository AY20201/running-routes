{"ast":null,"code":"var _jsxFileName = \"/Users/alexyoung/Documents/React/app1/src/containers/inputReader.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass InputReader extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      \"textBoxParams\": {} // to keep track of the text box values\n    };\n    this.handleInputChange = (e, key) => {\n      this.setState(prevState => ({\n        \"textBoxValues\": {\n          ...prevState.textBoxValues,\n          [key]: e.target.value\n        }\n      }));\n    };\n  }\n  //const[data, setData] = useState([{}]);\n  /*\n  submitParams()\n  {\n      var params = state[\"textBoxValues\"];\n      fetch(`http://127.0.0.1:5000/data?dist_min=${params[\"min_dist\"]}&dist_max=${params[\"max_dist\"]}&loc_lat=${params[\"loc_lat\"]}&loc_lon=${params[\"loc_lon\"]}`, { method: 'get', mode: 'cors' }).then(\n          res => res.json()\n      ).then(\n          data => {\n              setData(data)\n              console.log(data)\n          }\n      );\n       console.log(\"Button Pressed\");\n  }\n  */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => this.handleInputChange(e, \"loc_lat\") //location lat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => this.handleInputChange(e, \"loc_lon\") //location lon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => this.handleInputChange(e, \"min_dist\") //min distance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => this.handleInputChange(e, \"max_dist\") //max distance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\n;","map":{"version":3,"names":["React","useState","InputReader","Component","state","handleInputChange","e","key","setState","prevState","textBoxValues","target","value","render"],"sources":["/Users/alexyoung/Documents/React/app1/src/containers/inputReader.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nclass InputReader extends React.Component {\n    \n    state = {\n        \"textBoxParams\": {} // to keep track of the text box values\n    }\n    \n    handleInputChange = (e, key) => {\n        this.setState(prevState => ({\n            \"textBoxValues\": {\n                ...prevState.textBoxValues,\n                [key]: e.target.value\n            }\n        }))\n    }\n\n    //const[data, setData] = useState([{}]);\n    /*\n    submitParams()\n    {\n        var params = state[\"textBoxValues\"];\n        fetch(`http://127.0.0.1:5000/data?dist_min=${params[\"min_dist\"]}&dist_max=${params[\"max_dist\"]}&loc_lat=${params[\"loc_lat\"]}&loc_lon=${params[\"loc_lon\"]}`, { method: 'get', mode: 'cors' }).then(\n            res => res.json()\n        ).then(\n            data => {\n                setData(data)\n                console.log(data)\n            }\n        );\n\n        console.log(\"Button Pressed\");\n    }\n    */\n    render()\n    {\n        return(\n            <div>\n                <input \n                    type='number' \n                    onChange={e => this.handleInputChange(e, \"loc_lat\")} //location lat\n                />\n                <input \n                    type='number' \n                    onChange={e => this.handleInputChange(e, \"loc_lon\")} //location lon\n                />\n                <input \n                    type='number' \n                    onChange={e => this.handleInputChange(e, \"min_dist\")} //min distance\n                />\n                <input \n                    type='number' \n                    onChange={e => this.handleInputChange(e, \"max_dist\")} //max distance\n                />\n            </div>\n        );\n    }\n};"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,WAAW,SAASF,KAAK,CAACG,SAAS,CAAC;EAAA;IAAA;IAAA,KAEtCC,KAAK,GAAG;MACJ,eAAe,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC;IAAA,KAEDC,iBAAiB,GAAG,CAACC,CAAC,EAAEC,GAAG,KAAK;MAC5B,IAAI,CAACC,QAAQ,CAACC,SAAS,KAAK;QACxB,eAAe,EAAE;UACb,GAAGA,SAAS,CAACC,aAAa;UAC1B,CAACH,GAAG,GAAGD,CAAC,CAACK,MAAM,CAACC;QACpB;MACJ,CAAC,CAAC,CAAC;IACP,CAAC;EAAA;EAED;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEIC,MAAM,GACN;IACI,oBACI;MAAA,wBACI;QACI,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEP,CAAC,IAAI,IAAI,CAACD,iBAAiB,CAACC,CAAC,EAAE,SAAS,CAAE,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACvD,eACF;QACI,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEA,CAAC,IAAI,IAAI,CAACD,iBAAiB,CAACC,CAAC,EAAE,SAAS,CAAE,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACvD,eACF;QACI,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEA,CAAC,IAAI,IAAI,CAACD,iBAAiB,CAACC,CAAC,EAAE,UAAU,CAAE,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD,eACF;QACI,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEA,CAAC,IAAI,IAAI,CAACD,iBAAiB,CAACC,CAAC,EAAE,UAAU,CAAE,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAEd;AACJ;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}