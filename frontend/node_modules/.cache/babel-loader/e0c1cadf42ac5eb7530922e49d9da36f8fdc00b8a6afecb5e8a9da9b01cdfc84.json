{"ast":null,"code":"var _jsxFileName = \"/Users/alexyoung/Documents/React/app1/src/containers/inputReader.js\";\nimport React, { Component } from \"react\";\nimport MapRenderer from './MapRenderer';\nimport styles from '../styles.module.css';\nimport 'leaflet/dist/leaflet.css';\nimport titleImg from '../running_man_text.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass InputReader extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {},\n      textBoxValues: {},\n      currentPosition: {},\n      usedPosition: {},\n      displayedPathIndex: -1,\n      kilometers: 0,\n      loading: false,\n      requestError: \"\"\n    };\n    this.markerCallback = position => {\n      let roundedPosition = {\n        lat: position.lat,\n        lng: position.lng\n      };\n      this.setState({\n        usedPosition: roundedPosition\n      });\n    };\n    this.handleInputChange = (e, key) => {\n      let copyParams = {\n        ...this.state.textBoxValues,\n        [key]: e.target.value\n      };\n      this.setState({\n        textBoxValues: copyParams\n      });\n      if (this.state.currentPosition.lat === undefined)\n        //assumes you won't change loc before reloading page\n        {\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.success, this.error);\n          } else {\n            console.log(\"Could not use geolocation\");\n          }\n        }\n    };\n    this.handleSubmit = () => {\n      if (this.state.usedPosition.lat === undefined || this.state.usedPosition.lng === undefined) {\n        this.setState({\n          usedPosition: this.state.currentPosition\n        }, () => {\n          this.getLoops();\n        });\n      } else {\n        this.getLoops();\n      }\n      console.log(\"Button Pressed\");\n    };\n    this.cyclePaths = change => {\n      let new_index = this.state.displayedPathIndex + change;\n      if (this.state.displayedPathIndex !== -1) {\n        if (new_index >= 0 && new_index < this.state.data.loops.length) {\n          this.setState({\n            displayedPathIndex: new_index\n          });\n        }\n      }\n    };\n    this.setDistanceMode = km => {\n      this.setState({\n        kilometers: km\n      });\n    };\n    this.success = position => {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      this.setState({\n        currentPosition: {\n          lat: lat,\n          lng: lon\n        }\n      });\n    };\n    this.MapDisplay = () => {\n      //const activePath = this.state.displayedPathIndex !== -1 ? this.state.data.loops[this.state.displayedPathIndex].path : [];\n      const activePath = this.state.data.loops !== undefined ? this.state.data.loops[this.state.displayedPathIndex] : {\n        path: [],\n        center: [],\n        distance: 0.0\n      };\n      if (this.state.currentPosition.lat === undefined) {\n        //await current position\n        navigator.geolocation.getCurrentPosition(this.success, this.error);\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MapRenderer, {\n            currentPosition: this.state.currentPosition,\n            activePath: activePath,\n            kilometers: this.state.kilometers,\n            markerCallback: this.markerCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this);\n      }\n    };\n  }\n  getLoops() {\n    this.setState({\n      loading: true\n    });\n    this.setState({\n      requestError: \"\"\n    });\n    fetch(`http://127.0.0.1:5000/data?dist_min=${this.state.textBoxValues.min_dist}&dist_max=${this.state.textBoxValues.max_dist}&loc_lat=${this.state.usedPosition.lat}&loc_lon=${this.state.usedPosition.lng}&km=${this.state.kilometers}`, {\n      method: 'get',\n      mode: 'cors'\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n      this.setState({\n        loading: false\n      });\n      if (data.loops.length > 0) {\n        this.setState({\n          displayedPathIndex: 0\n        });\n      } else {\n        this.setState({\n          requestError: \"No routes were found. Try adjusting your distances or starting location.\"\n        });\n        this.setState({\n          data: {}\n        });\n        console.log(\"No loops were found\");\n      }\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        loading: false\n      });\n      this.setState({\n        requestError: \"The request failed. Adjust your parameters and try again, or check console for error messages.\"\n      });\n    });\n  }\n  error() {\n    console.log(\"Could not get location\");\n  }\n  render() {\n    const errorMessage = this.state.requestError === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 64\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: this.state.requestError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 80\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gradient,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: titleImg,\n          alt: \"Running Routes\",\n          className: styles.titleimg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(this.MapDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), errorMessage, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gradient,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: this.handleSubmit,\n            disabled: this.state.loading,\n            children: \"FIND ROUTES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input + \" \" + styles.short,\n            placeholder: \"min dist\",\n            type: \"number\",\n            onChange: e => this.handleInputChange(e, \"min_dist\") //min distance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input + \" \" + styles.short,\n            placeholder: \"max dist\",\n            type: \"number\",\n            onChange: e => this.handleInputChange(e, \"max_dist\") //max distance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => this.cyclePaths(-1),\n            disabled: this.state.displayedPathIndex !== -1 ? this.state.displayedPathIndex === 0 : true,\n            children: \"PREV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => this.cyclePaths(1),\n            disabled: this.state.displayedPathIndex !== -1 ? this.state.displayedPathIndex === this.state.data.loops.length - 1 : true,\n            children: \"NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => this.setDistanceMode(1),\n            disabled: this.state.kilometers,\n            children: \"KM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => this.setDistanceMode(0),\n            disabled: !this.state.kilometers,\n            children: \"MI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.textBlock,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.paragraph,\n            children: \"runningroutes.com is a simple tool that uses the depth first search (DFS) algorithm with OpenStreetMap Data to find and display running routes in your area. Click on the map to change the location of the marker, which will serve as the starting and ending point for all routes found. Specify the range of desired distances with the two textboxes. Be aware that large distances or routes in very dense areas will take a long time to be calculated.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n}\n;\nexport default InputReader;","map":{"version":3,"names":["React","Component","MapRenderer","styles","titleImg","InputReader","state","data","textBoxValues","currentPosition","usedPosition","displayedPathIndex","kilometers","loading","requestError","markerCallback","position","roundedPosition","lat","lng","setState","handleInputChange","e","key","copyParams","target","value","undefined","navigator","geolocation","getCurrentPosition","success","error","console","log","handleSubmit","getLoops","cyclePaths","change","new_index","loops","length","setDistanceMode","km","coords","latitude","lon","longitude","MapDisplay","activePath","path","center","distance","fetch","min_dist","max_dist","method","mode","then","res","json","catch","render","errorMessage","gradient","titleimg","container","button","input","short","textBlock","paragraph"],"sources":["/Users/alexyoung/Documents/React/app1/src/containers/inputReader.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport MapRenderer from './MapRenderer'\nimport styles from '../styles.module.css'\nimport 'leaflet/dist/leaflet.css'\nimport titleImg from '../running_man_text.png'\n\nclass InputReader extends Component {\n    \n    state = \n    {\n        data: {},\n        textBoxValues: {},\n        currentPosition: {},\n        usedPosition: {},\n        displayedPathIndex: -1,\n        kilometers: 0,\n        loading: false,\n        requestError: \"\"\n    }\n\n    markerCallback = (position) => {\n        let roundedPosition = {lat: position.lat, lng: position.lng};\n        this.setState({usedPosition: roundedPosition});\n    }\n\n    handleInputChange = (e, key) => {\n        let copyParams = { ...this.state.textBoxValues, [key]: e.target.value};\n        this.setState({textBoxValues: copyParams});\n\n        if(this.state.currentPosition.lat === undefined) //assumes you won't change loc before reloading page\n        {\n            if(navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(this.success, this.error);\n            } else {\n                console.log(\"Could not use geolocation\");\n            }\n        }\n    }\n\n    handleSubmit = () =>\n    {\n        if(this.state.usedPosition.lat === undefined || this.state.usedPosition.lng === undefined) {\n            this.setState({usedPosition: this.state.currentPosition}, () => {\n                this.getLoops()\n            });\n        } else {\n            this.getLoops();\n        }\n\n        console.log(\"Button Pressed\");\n    }\n\n    cyclePaths = (change) =>\n    {\n        let new_index = this.state.displayedPathIndex + change;\n        if(this.state.displayedPathIndex !== -1) {\n            if(new_index >= 0 && new_index < this.state.data.loops.length) {\n                this.setState({displayedPathIndex: new_index});\n            }\n        }\n    }\n\n    setDistanceMode = (km) =>\n    {\n        this.setState({kilometers: km});\n    }\n\n    getLoops() {\n        this.setState({loading: true});\n        this.setState({requestError: \"\"});\n\n        fetch(`http://127.0.0.1:5000/data?dist_min=${this.state.textBoxValues.min_dist}&dist_max=${this.state.textBoxValues.max_dist}&loc_lat=${this.state.usedPosition.lat}&loc_lon=${this.state.usedPosition.lng}&km=${this.state.kilometers}`, { method: 'get', mode: 'cors' })\n        .then(\n            res => res.json()\n        ).then(\n            data => {\n                this.setState({data: data});\n                this.setState({loading: false});\n                if(data.loops.length > 0) {\n                    this.setState({displayedPathIndex: 0});\n                    \n                } else {\n                    this.setState({requestError: \"No routes were found. Try adjusting your distances or starting location.\"})\n                    this.setState({data:{}})\n                    console.log(\"No loops were found\");\n                }\n                console.log(data);\n            }\n        ).catch((error) => {\n            console.log(error);\n            this.setState({loading: false});\n            this.setState({requestError: \"The request failed. Adjust your parameters and try again, or check console for error messages.\"});\n        });\n    }\n\n    success = (position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        \n        this.setState({currentPosition: {lat:lat, lng:lon}});\n    }\n\n    error() {\n        console.log(\"Could not get location\");\n    }\n    \n    MapDisplay = () => {\n        //const activePath = this.state.displayedPathIndex !== -1 ? this.state.data.loops[this.state.displayedPathIndex].path : [];\n        const activePath = this.state.data.loops !== undefined ? this.state.data.loops[this.state.displayedPathIndex] : {path: [], center: [], distance: 0.0}\n\n        if(this.state.currentPosition.lat === undefined) { //await current position\n            navigator.geolocation.getCurrentPosition(this.success, this.error);\n            return (\n                <div></div>\n            );\n        } else {\n            return (\n                <div>\n                    <MapRenderer currentPosition={this.state.currentPosition} activePath={activePath} kilometers={this.state.kilometers} markerCallback={this.markerCallback}/>\n                </div>\n            );\n        }\n    }\n    \n    render(){\n\n        const errorMessage = this.state.requestError === \"\" ? (<div></div>) : (<p className={styles.error}>{this.state.requestError}</p>);\n\n        return(\n            <div>\n                <div className={styles.gradient}>\n                    <img src={titleImg} alt=\"Running Routes\" className={styles.titleimg}></img>\n                </div>\n                <this.MapDisplay/>\n                {errorMessage}\n                <div className={styles.gradient}>\n                    <div className={styles.container}>\n                        <button className={styles.button} onClick={this.handleSubmit} disabled={this.state.loading}>\n                            FIND ROUTES\n                        </button>\n                        <input\n                            className={styles.input + \" \" + styles.short}\n                            placeholder=\"min dist\"\n                            type='number' \n                            onChange={e => this.handleInputChange(e, \"min_dist\")} //min distance\n                        />\n                        <input\n                            className={styles.input + \" \" + styles.short}\n                            placeholder=\"max dist\"\n                            type='number' \n                            onChange={e => this.handleInputChange(e, \"max_dist\")} //max distance\n                        />\n                        <button className={styles.button} onClick={() => this.cyclePaths(-1)} disabled={this.state.displayedPathIndex !== -1 ? this.state.displayedPathIndex === 0 : true}>PREV</button>\n                        <button className={styles.button} onClick={() => this.cyclePaths(1)} disabled={this.state.displayedPathIndex !== -1 ? this.state.displayedPathIndex === this.state.data.loops.length - 1 : true}>NEXT</button>\n\n                        <button className={styles.button} onClick={() => this.setDistanceMode(1)} disabled={this.state.kilometers}>KM</button>\n                        <button className={styles.button} onClick={() => this.setDistanceMode(0)} disabled={!this.state.kilometers}>MI</button>\n                    </div>\n                    <div className={styles.textBlock}>\n                        <p className={styles.paragraph}>\n                            runningroutes.com is a simple tool that uses the depth first search (DFS) algorithm with OpenStreetMap Data to find and display running routes in your area.\n                            Click on the map to change the location of the marker, which will serve as the starting and ending point for all routes found. Specify the range of desired distances\n                            with the two textboxes. Be aware that large distances or routes in very dense areas will take a long time to be calculated.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default InputReader;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}