{"ast":null,"code":"var _jsxFileName = \"/Users/alexyoung/Documents/React/app1/src/containers/inputReader.js\";\nimport React, { Component } from \"react\";\nimport styles from '../styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass InputReader extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {},\n      textBoxValues: {},\n      currentPosition: []\n    };\n    this.handleInputChange = (e, key) => {\n      let copyParams = {\n        ...this.state.textBoxValues,\n        [key]: e.target.value\n      };\n      this.setState({\n        textBoxValues: copyParams\n      });\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.success, this.error);\n      } else {\n        console.log(\"Could not use geolocation\");\n      }\n    };\n    this.handleSubmit = () => {\n      const params = this.state.textBoxValues;\n      if (params[\"loc_lat\"] === undefined || params[\"loc_lon\"] === undefined) {\n        if (navigator.geolocation) {\n          let copyParams = {\n            ...this.state.textBoxValues,\n            loc_lat: currentPosition[0],\n            loc_lon: currentPosition[1]\n          };\n          this.setState({\n            textBoxValues: copyParams\n          }, () => {\n            this.getLoops();\n          });\n        } else {\n          console.log(\"Could not use geolocation\");\n        }\n      } else {\n        this.getLoops();\n      }\n\n      //console.log(textBoxParams);\n      console.log(\"Button Pressed\");\n    };\n    this.success = position => {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      /*\n      let copyParams = { ...this.state.textBoxValues, loc_lat: lat, loc_lon: lon};\n      this.setState({textBoxValues: copyParams}, () => {\n          this.getLoops()\n      });\n      */\n      this.setState({\n        currentPosition: [lat, lon]\n      });\n      //this.getLoops();\n    };\n  }\n  getLoops() {\n    const params = this.state.textBoxValues;\n    fetch(`http://127.0.0.1:5000/data?dist_min=${params[\"min_dist\"]}&dist_max=${params[\"max_dist\"]}&loc_lat=${params[\"loc_lat\"]}&loc_lon=${params[\"loc_lon\"]}`, {\n      method: 'get',\n      mode: 'cors'\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n      console.log(data);\n    });\n  }\n  error() {\n    console.log(\"Could not get location\");\n  }\n  /*\n  MapDisplay (){\n      const currentPosition = []\n       return (\n          <Map center={position} zoom={13}>\n              <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              <Marker position={position}>\n                  <Popup>\n                  A sample marker on the map.\n                  </Popup>\n              </Marker>\n          </Map>\n      );\n  }\n  */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          onClick: this.handleSubmit,\n          children: \"FIND ROUTES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"number\",\n          onChange: e => this.handleInputChange(e, \"loc_lat\") //location lat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"number\",\n          onChange: e => this.handleInputChange(e, \"loc_lon\") //location lon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"number\",\n          onChange: e => this.handleInputChange(e, \"min_dist\") //min distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"number\",\n          onChange: e => this.handleInputChange(e, \"max_dist\") //max distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n}\n;\nexport default InputReader;","map":{"version":3,"names":["React","Component","styles","InputReader","state","data","textBoxValues","currentPosition","handleInputChange","e","key","copyParams","target","value","setState","navigator","geolocation","getCurrentPosition","success","error","console","log","handleSubmit","params","undefined","loc_lat","loc_lon","getLoops","position","lat","coords","latitude","lon","longitude","fetch","method","mode","then","res","json","render","container","button","input"],"sources":["/Users/alexyoung/Documents/React/app1/src/containers/inputReader.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport styles from '../styles.module.css'\n\n\n\nclass InputReader extends Component {\n    \n    state = \n    {\n        data: {},\n        textBoxValues: {},\n        currentPosition: []\n    }\n    \n    handleInputChange = (e, key) => {\n        let copyParams = { ...this.state.textBoxValues, [key]: e.target.value};\n        this.setState({textBoxValues: copyParams});\n\n        if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.success, this.error);\n        } else {\n            console.log(\"Could not use geolocation\");\n        }\n    }\n    \n    handleSubmit = () =>\n    {\n        const params = this.state.textBoxValues;\n        \n        if(params[\"loc_lat\"] === undefined || params[\"loc_lon\"] === undefined) {\n            if(navigator.geolocation) {\n                let copyParams = { ...this.state.textBoxValues, loc_lat: currentPosition[0], loc_lon: currentPosition[1]};\n                this.setState({textBoxValues: copyParams}, () => {\n                    this.getLoops()\n                });\n            } else {\n                console.log(\"Could not use geolocation\");\n            }\n        } else {\n            this.getLoops();\n        }\n\n        //console.log(textBoxParams);\n        console.log(\"Button Pressed\");\n    }\n\n    getLoops() {\n        const params = this.state.textBoxValues;\n\n        fetch(`http://127.0.0.1:5000/data?dist_min=${params[\"min_dist\"]}&dist_max=${params[\"max_dist\"]}&loc_lat=${params[\"loc_lat\"]}&loc_lon=${params[\"loc_lon\"]}`, { method: 'get', mode: 'cors' }).then(\n            res => res.json()\n        ).then(\n            data => {\n                this.setState({data: data})\n                console.log(data)\n            }\n        );\n    }\n\n    success = (position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        /*\n        let copyParams = { ...this.state.textBoxValues, loc_lat: lat, loc_lon: lon};\n        this.setState({textBoxValues: copyParams}, () => {\n            this.getLoops()\n        });\n        */\n       this.setState({currentPosition: [lat, lon]});\n        //this.getLoops();\n    }\n\n    error() {\n        console.log(\"Could not get location\");\n    }\n    /*\n    MapDisplay (){\n        const currentPosition = []\n\n        return (\n            <Map center={position} zoom={13}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                <Marker position={position}>\n                    <Popup>\n                    A sample marker on the map.\n                    </Popup>\n                </Marker>\n            </Map>\n        );\n    }\n    */\n    render(){\n        return(\n            <div>\n                \n                <div className={styles.container}>\n                    <button className={styles.button} onClick={this.handleSubmit}>\n                        FIND ROUTES\n                    </button>\n                    <input\n                        className={styles.input}\n                        type='number'\n                        onChange={e => this.handleInputChange(e, \"loc_lat\")} //location lat\n                    />\n                    <input\n                        className={styles.input}\n                        type='number' \n                        onChange={e => this.handleInputChange(e, \"loc_lon\")} //location lon\n                    />\n                    <input\n                        className={styles.input}\n                        type='number' \n                        onChange={e => this.handleInputChange(e, \"min_dist\")} //min distance\n                    />\n                    <input\n                        className={styles.input}\n                        type='number' \n                        onChange={e => this.handleInputChange(e, \"max_dist\")} //max distance\n                    />\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default InputReader;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}