{"ast":null,"code":"var _jsxFileName = \"/Users/alexyoung/Documents/React/app1/src/containers/MapRenderer.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { MapContainer, Marker, TileLayer } from 'react-leaflet';\nimport RoutePolyline from './RoutePolyline';\nimport ClickedLocationPopup from './RoutePolyline';\nimport styles from '../styles.module.css';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderMap(_ref) {\n  _s();\n  let {\n    currentPosition,\n    activePath,\n    kilometers\n  } = _ref;\n  const activePathDependency = useMemo(() => {\n    return activePath;\n  }, [activePath]);\n  const kilometersDependency = useMemo(() => {\n    return kilometers;\n  }, [kilometers]);\n\n  //needed to prevent missing dependencies with useMemo for the polyline\n\n  const polyline = useMemo(() => /*#__PURE__*/_jsxDEV(RoutePolyline, {\n    path: activePathDependency,\n    kilometers: kilometersDependency\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this), [activePathDependency, kilometersDependency]);\n  //polyline is only re rendered when active path or center point changes, so the map will not\n  //move when I type in the textboxes\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    className: styles.map,\n    center: currentPosition,\n    zoom: 15,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), polyline]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n  //needs to be inside a function so I can use useMemo hook\n}\n_s(RenderMap, \"R8qFYaIF1RfdY/WAv7CVjxUT/W0=\");\n_c = RenderMap;\nexport default RenderMap;\nvar _c;\n$RefreshReg$(_c, \"RenderMap\");","map":{"version":3,"names":["React","useMemo","MapContainer","Marker","TileLayer","RoutePolyline","ClickedLocationPopup","styles","RenderMap","currentPosition","activePath","kilometers","activePathDependency","kilometersDependency","polyline","map"],"sources":["/Users/alexyoung/Documents/React/app1/src/containers/MapRenderer.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { MapContainer, Marker, TileLayer } from 'react-leaflet';\nimport RoutePolyline from './RoutePolyline'\nimport ClickedLocationPopup from './RoutePolyline'\nimport styles from '../styles.module.css'\nimport 'leaflet/dist/leaflet.css';\n\nfunction RenderMap({ currentPosition, activePath, kilometers })\n{\n    const activePathDependency = useMemo(() => {\n        return activePath;\n    }, [activePath]);\n\n    const kilometersDependency = useMemo(() => {\n        return kilometers;\n    }, [kilometers]);\n\n    //needed to prevent missing dependencies with useMemo for the polyline\n\n    const polyline = useMemo(\n        () => (\n            <RoutePolyline path={activePathDependency} kilometers={kilometersDependency}/>\n        ),\n        [activePathDependency, kilometersDependency]\n    )\n    //polyline is only re rendered when active path or center point changes, so the map will not\n    //move when I type in the textboxes\n\n    return (\n        <MapContainer className = {styles.map} center={currentPosition} zoom={15}>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {polyline}\n        </MapContainer>\n    );\n    //needs to be inside a function so I can use useMemo hook\n}\n\nexport default RenderMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,YAAY,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AAC/D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,oBAAoB,MAAM,iBAAiB;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,0BAA0B;AAAC;AAElC,SAASC,SAAS,OAClB;EAAA;EAAA,IADmB;IAAEC,eAAe;IAAEC,UAAU;IAAEC;EAAW,CAAC;EAE1D,MAAMC,oBAAoB,GAAGX,OAAO,CAAC,MAAM;IACvC,OAAOS,UAAU;EACrB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMG,oBAAoB,GAAGZ,OAAO,CAAC,MAAM;IACvC,OAAOU,UAAU;EACrB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;;EAEA,MAAMG,QAAQ,GAAGb,OAAO,CACpB,mBACI,QAAC,aAAa;IAAC,IAAI,EAAEW,oBAAqB;IAAC,UAAU,EAAEC;EAAqB;IAAA;IAAA;IAAA;EAAA,QAC/E,EACD,CAACD,oBAAoB,EAAEC,oBAAoB,CAAC,CAC/C;EACD;EACA;;EAEA,oBACI,QAAC,YAAY;IAAC,SAAS,EAAIN,MAAM,CAACQ,GAAI;IAAC,MAAM,EAAEN,eAAgB;IAAC,IAAI,EAAE,EAAG;IAAA,wBACrE,QAAC,SAAS;MACN,GAAG,EAAC,oDAAoD;MACxD,WAAW,EAAC;IAAyF;MAAA;MAAA;MAAA;IAAA,QACvG,EACDK,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;EAEnB;AACJ;AAAC,GA/BQN,SAAS;AAAA,KAATA,SAAS;AAiClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}